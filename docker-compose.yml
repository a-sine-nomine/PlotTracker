services:
  frontend:
    image: asinenomine/asinenomine:plottracker-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_started
    volumes:
      - /etc/letsencrypt/ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
    ports:
      - "443:443"
      - "80:80"
    networks:
      - frontend-net
    configs:
      - source: default.conf
        target: /etc/nginx/conf.d/default.conf
    restart: on-failure

  backend:
    image: asinenomine/asinenomine:plottracker-backend
    build:
      context: backend
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_started
    environment:
      DB_DATABASE: plottracker
      DB_PASSWORD: ${DB_PASSWORD:-password123}
      DB_USER: root
      LOG_LEVEL: DEBUG
    networks:
      - frontend-net
      - backend-net
    restart: on-failure
  
  database:
    image: mysql:8.4.5
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: plottracker
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password123}
    ports: 
      - "3306:3306"
    networks:
      - backend-net
    restart: on-failure

volumes:
  db_data:

networks:
  frontend-net: {}
  backend-net: {}

configs:
  default.conf:
    file: nginx.conf