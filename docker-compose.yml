services:
  frontend:
    image: asinenomine/asinenomine:plottracker-frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - /etc/letsencrypt/ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
    ports:
      - "443:443"
      - "80:80"
    networks:
      - frontend-net
    configs:
      - source: default.conf
        target: /etc/nginx/conf.d/default.conf

  backend:
    image: asinenomine/asinenomine:plottracker-backend
    build:
      context: backend
      dockerfile: Dockerfile
    depends_on:
      database:
        condition: service_started
    environment:
      DB_DATABASE: plottracker
      DB_USER: root
      DB_PASSWORD: password123
      LOG_LEVEL: DEBUG
    networks:
      - frontend-net
      - backend-net
  
  database:
    image: mysql:8.4.5
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: plottracker
      MYSQL_ROOT_PASSWORD: password123
      # MYSQL_USER: plottracker
      # MYSQL_PASSWORD: password123
      # MYSQL_RANDOM_ROOT_PASSWORD: true
    networks:
      - backend-net

volumes:
  db_data:

networks:
  frontend-net: {}
  backend-net: {}

configs:
  default.conf:
    content: |
      server {
          listen       443 ssl;
          server_name  plot-tracker.ru www.plot-tracker.ru;
          ssl_certificate /etc/nginx/ssl/fullchain.pem;
          ssl_certificate_key /etc/nginx/ssl/privkey.pem;
          error_page   500 502 503 504  /50x.html;
          location = /50x.html {
              root   /usr/share/nginx/html;
          }
          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
          }
          location /api/ {
              proxy_pass http://backend:8080;
          }
      }
      server {
          listen       80;
          location / {
              return 301 https://$host$request_uri;
          }
      }